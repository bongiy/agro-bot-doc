from telegram import Update, InputFile
from telegram.ext import (
    ContextTypes,
    ConversationHandler,
    MessageHandler,
    CallbackQueryHandler,
    CommandHandler,
    filters,
)

from handlers.menu import admin_only
from dialogs.payer import to_menu
from db import get_contract_overview
from keyboards.reports import report_nav_kb
from utils.reports import contracts_overview_to_excel, CONTRACT_STATUS_LABELS
from contract_generation_v2 import format_money

(CO_SHOW,) = range(1)


@admin_only
async def contract_overview_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = await update.message.reply_text("–§–æ—Ä–º—É—é –∑–≤—ñ—Ç...")
    summary, companies, statuses, years, _ = await get_contract_overview()
    lines: list[str] = [
        "üìë <b>–£–∑–∞–≥–∞–ª—å–Ω–µ–Ω–∏–π –∑–≤—ñ—Ç –ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞—Ö</b>",
        f"üìÑ –î–æ–≥–æ–≤–æ—Ä—ñ–≤: {summary['contracts']}",
        f"üë§ –ü–∞–π–æ–≤–∏–∫—ñ–≤: {summary['payers']}",
        f"üìè –ü–ª–æ—â–∞: {summary['area']:.2f} –≥–∞",
        f"üí∞ –†—ñ—á–Ω–∞ –ø–ª–∞—Ç–∞: {format_money(summary['rent'])}",
        f"üè¢ –¢–û–í: {summary['companies']}",
    ]
    if companies:
        lines.append("\nüè¢ <b>–ü–æ –∫–æ–º–ø–∞–Ω—ñ—è—Ö:</b>")
        for c in companies:
            lines.append(
                f"‚Ä¢ {c['name']}: {c['contracts']} –¥–æ–≥–æ–≤–æ—Ä—ñ–≤ / {float(c['area'] or 0):.2f} –≥–∞ / {format_money(c['rent'])}"
            )
    if statuses:
        lines.append("\nüìç <b>–ü–æ —Å—Ç–∞—Ç—É—Å–∞—Ö:</b>")
        for s in statuses:
            label = CONTRACT_STATUS_LABELS.get(s['status'], s['status'])
            lines.append(f"‚Ä¢ {label} ‚Äî {s['contracts']}")
    if years:
        lines.append("\nüìÖ <b>–ó–∞ —Ä–æ–∫–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è:</b>")
        for y in years:
            lines.append(f"‚Ä¢ {int(y['year']) if y['year'] is not None else '‚Äî'}: {y['contracts']} –¥–æ–≥–æ–≤–æ—Ä—ñ–≤")
    await msg.edit_text("\n".join(lines), parse_mode="HTML", reply_markup=report_nav_kb(False, False))
    return CO_SHOW


@admin_only
async def contract_overview_export_cb(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    summary, companies, statuses, years, rows = await get_contract_overview()
    bio = await contracts_overview_to_excel(rows, companies, statuses, years, summary)
    await query.message.reply_document(document=InputFile(bio, filename="contracts_overview.xlsx"))
    await query.answer()
    return CO_SHOW


contract_overview_conv = ConversationHandler(
    entry_points=[
        MessageHandler(filters.Regex("^üìë –£–∑–∞–≥–∞–ª—å–Ω–µ–Ω–∏–π –∑–≤—ñ—Ç –ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞—Ö$"), contract_overview_start)
    ],
    states={
        CO_SHOW: [CallbackQueryHandler(contract_overview_export_cb, pattern=r"^payrep_export$")],
    },
    fallbacks=[CommandHandler("start", to_menu)],
)
