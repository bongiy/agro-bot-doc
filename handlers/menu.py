from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from keyboards.menu import (
    main_menu, main_menu_admin,
    payers_menu, lands_menu, fields_menu, contracts_menu,
    payments_menu, reports_menu, search_menu, admin_panel_menu, admin_tov_menu
)
from db import get_companies, get_company

admin_ids = [370806943]  # TODO: –ó–∞–º—ñ–Ω—ñ—Ç—å —Ü–µ–π —Å–ø–∏—Å–æ–∫ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ñ admin_ids –∞–±–æ —ñ–º–ø–æ—Ä—Ç—É–π—Ç–µ –∑ config

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    is_admin = update.effective_user.id in admin_ids
    await update.message.reply_text(
        "–í—ñ—Ç–∞—î–º–æ! –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:",
        reply_markup=main_menu_admin if is_admin else main_menu
    )

async def to_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    is_admin = update.effective_user.id in admin_ids
    await update.message.reply_text(
        "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:",
        reply_markup=main_menu_admin if is_admin else main_menu
    )

async def payers_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–ü–∞–π–æ–≤–∏–∫–∏¬ª", reply_markup=payers_menu)

async def lands_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–î—ñ–ª—è–Ω–∫–∏¬ª", reply_markup=lands_menu)

async def fields_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–ü–æ–ª—è¬ª", reply_markup=fields_menu)

async def contracts_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–î–æ–≥–æ–≤–æ—Ä–∏¬ª", reply_markup=contracts_menu)

async def payments_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–í–∏–ø–ª–∞—Ç–∏¬ª", reply_markup=payments_menu)

async def reports_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–ó–≤—ñ—Ç–∏¬ª", reply_markup=reports_menu)

async def search_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ú–µ–Ω—é ¬´–ü–æ—à—É–∫¬ª", reply_markup=search_menu)

# --- –ê–î–ú–Ü–ù–ü–ê–ù–ï–õ–¨ ---

async def admin_panel_handler(update, context):
    admin_ids = [370806943]  # <--- —Ç–≤—ñ–π tg_id
    if update.effective_user.id not in admin_ids:
        msg = getattr(update, 'message', None)
        if msg:
            await msg.reply_text("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –¥—ñ—ó.")
        else:
            await update.callback_query.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –¥—ñ—ó.", show_alert=True)
        return
    text = (
        "üõ°Ô∏è <b>–ê–¥–º—ñ–Ω–ø–∞–Ω–µ–ª—å</b>:\n\n"
        "–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä—É–≤–∞–Ω–Ω—è:"
    )
    reply_markup = admin_panel_menu
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text(text, parse_mode="HTML", reply_markup=reply_markup)
    else:
        await update.callback_query.edit_message_text(text, parse_mode="HTML", reply_markup=reply_markup)

async def admin_tov_handler(update, context):
    msg = getattr(update, 'message', None)
    text = "üè¢ –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –¢–û–í-–æ—Ä–µ–Ω–¥–∞—Ä—ñ–≤:\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
    reply_markup = admin_tov_menu
    if msg:
        await msg.reply_text(text, reply_markup=reply_markup)
    else:
        await update.callback_query.edit_message_text(text, reply_markup=reply_markup)

# --- –°–ø–∏—Å–æ–∫ –¢–û–í (–∫–Ω–æ–ø–∫–∞) ---
async def admin_tov_list_handler(update, context):
    companies = await get_companies()
    text = "<b>–°–ø–∏—Å–æ–∫ –¢–û–í-–æ—Ä–µ–Ω–¥–∞—Ä—ñ–≤:</b>\n–û–±–µ—Ä—ñ—Ç—å –∫–æ–º–ø–∞–Ω—ñ—é –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–∞—Ä—Ç–∫–∏."
    if not companies:
        text = "–ù–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –¢–û–í-–æ—Ä–µ–Ω–¥–∞—Ä—è."
    keyboard = [
        [InlineKeyboardButton(
            f"{c['short_name'] or c['full_name']}", callback_data=f"company_card:{c['id']}")]
        for c in companies
    ] if companies else None

    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text(
            text, reply_markup=InlineKeyboardMarkup(keyboard) if keyboard else None, parse_mode="HTML"
        )
    else:
        await update.callback_query.edit_message_text(
            text, reply_markup=InlineKeyboardMarkup(keyboard) if keyboard else None, parse_mode="HTML"
        )

# --- –ö–∞—Ä—Ç–∫–∞ –¢–û–í (CallbackQuery) ---
async def admin_company_card_callback(update, context):
    query = update.callback_query
    company_id = int(query.data.split(":")[1])
    company = await get_company(company_id)
    if not company:
        await query.answer("–¢–û–í –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!", show_alert=True)
        return
    text = (
        f"<b>–ö–∞—Ä—Ç–∫–∞ –¢–û–í-–æ—Ä–µ–Ω–¥–∞—Ä—è</b>\n"
        f"<b>–û–ü–§:</b> <code>{company['opf']}</code>\n"
        f"<b>–ü–æ–≤–Ω–∞ –Ω–∞–∑–≤–∞:</b> <code>{company['full_name']}</code>\n"
        f"<b>–°–∫–æ—Ä–æ—á–µ–Ω–∞ –Ω–∞–∑–≤–∞:</b> <code>{company['short_name']}</code>\n"
        f"<b>–Ñ–î–†–ü–û–£:</b> <code>{company['edrpou']}</code>\n"
        f"<b>IBAN:</b> <code>{company['bank_account']}</code>\n"
        f"<b>–ì—Ä—É–ø–∞ –æ–ø–æ–¥–∞—Ç–∫—É–≤–∞–Ω–Ω—è:</b> <code>{company['tax_group']}</code>\n"
        f"<b>–ü–î–í:</b> <code>{'—Ç–∞–∫' if company['is_vat_payer'] else '–Ω—ñ'}</code>\n"
        f"<b>–Ü–ü–ù –ø–ª–∞—Ç–Ω–∏–∫–∞ –ü–î–í:</b> <code>{company['vat_ipn'] or '‚Äî'}</code>\n"
        f"<b>–Æ—Ä–∏–¥–∏—á–Ω–∞ –∞–¥—Ä–µ—Å–∞:</b> <code>{company['address_legal']}</code>\n"
        f"<b>–ü–æ—à—Ç–æ–≤–∞ –∞–¥—Ä–µ—Å–∞:</b> <code>{company['address_postal']}</code>\n"
        f"<b>–î–∏—Ä–µ–∫—Ç–æ—Ä:</b> <code>{company['director']}</code>\n"
    )
    keyboard = [
        [InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏", callback_data=f"company_edit:{company_id}")],
        [InlineKeyboardButton("‚Ü©Ô∏è –î–æ —Å–ø–∏—Å–∫—É –¢–û–í", callback_data="company_list")],
        [InlineKeyboardButton("‚Ü©Ô∏è –ê–¥–º—ñ–Ω–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")]
    ]
    await query.edit_message_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode="HTML")

# --- Stub-—Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —ñ–Ω—à–∏—Ö —Ä–æ–∑–¥—ñ–ª—ñ–≤ –∞–¥–º—ñ–Ω–∫–∏ ---

async def admin_templates_handler(update, context):
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text("–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω—ñ–≤ –¥–æ–≥–æ–≤–æ—Ä—ñ–≤ ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    else:
        await update.callback_query.edit_message_text("–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç —à–∞–±–ª–æ–Ω—ñ–≤ –¥–æ–≥–æ–≤–æ—Ä—ñ–≤ ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

async def admin_users_handler(update, context):
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text("–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    else:
        await update.callback_query.edit_message_text("–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

async def admin_delete_handler(update, context):
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text("–í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±‚Äô—î–∫—Ç—ñ–≤ ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    else:
        await update.callback_query.edit_message_text("–í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–±‚Äô—î–∫—Ç—ñ–≤ ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

async def admin_tov_edit_handler(update, context):
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¢–û–í ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    else:
        await update.callback_query.edit_message_text("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¢–û–í ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

async def admin_tov_delete_handler(update, context):
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text("–í–∏–¥–∞–ª–µ–Ω–Ω—è –¢–û–í ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")
    else:
        await update.callback_query.edit_message_text("–í–∏–¥–∞–ª–µ–Ω–Ω—è –¢–û–í ‚Äî –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.")

async def to_admin_panel(update, context):
    from keyboards.menu import admin_panel_menu
    msg = getattr(update, 'message', None)
    if msg:
        await msg.reply_text("üõ°Ô∏è –ê–¥–º—ñ–Ω–ø–∞–Ω–µ–ª—å:", reply_markup=admin_panel_menu)
    else:
        await update.callback_query.edit_message_text("üõ°Ô∏è –ê–¥–º—ñ–Ω–ø–∞–Ω–µ–ª—å:", reply_markup=admin_panel_menu)
